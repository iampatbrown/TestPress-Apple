# frozen_string_literal: true

default_platform :ios

# It's necessary to be explicit with the DerivedData folder because that's
# where the xctestrun file will go.
PROJECT_ROOT_FOLDER = File.dirname(File.expand_path(__dir__))
DERIVED_DATA_PATH = File.join(PROJECT_ROOT_FOLDER, 'DerivedData')

platform :ios do
  lane :build_for_testing do
    run_tests(
      project: 'TestPress.xcodeproj',
      scheme: 'TestPress',
      build_for_testing: true,
      derived_data_path: DERIVED_DATA_PATH
    )
  end

  lane :test_without_building do
    # TODO: This should be computed, not hardcoded
    # xctestrun_path = File.join(DERIVED_DATA_PATH, 'Build/Products/TestPress_TestPress_iphonesimulator15.5-x86_64.xctestrun')
    xctestrun_path = Dir.glob("#{DERIVED_DATA_PATH}/Build/Products/*.xctestrun").first

    # add_buildkite_analytics_token(xctestrun_path: xctestrun_path)

    run_tests(
      project: 'TestPress.xcodeproj',
      scheme: 'TestPress',
      test_without_building: true,
      xctestrun: xctestrun_path
    )
  end

  # def add_buildkite_analytics_token(xctestrun_path:)
  #   token_key = 'BUILDKITE_ANALYTICS_TOKEN'
  #   token = ENV[token_key]
  #   return if token.nil?

  #   xctestrun = Plist.parse_xml(xctestrun_path)
  #   xctestrun['TestConfigurations'].each do |configuration|
  #     configuration['TestTargets'].each do |target|
  #       target['EnvironmentVariables'][token_key] = token
  #     end
  #   end

  #   File.write(xctestrun_path, Plist::Emit.dump(xctestrun))
  # end
end
